{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAQ,AADA,SAAS,aAAa,CAAC,SACjB,aAAa,CAAC,SAC5B,EAAU,SAAS,gBAAgB,CAAC,WACpC,EAAe,CAAO,CAAC,EAAE,CACzB,EAAe,CAAO,CAAC,EAAE,CACzB,EAAkB,CAAO,CAAC,EAAE,CAC5B,EAAkB,CAAO,CAAC,EAAE,CAE9B,EAAW,EACX,EAAa,EAoCjB,EAAa,gBAAgB,CAAC,QAAS,WACrC,GAAI,EAAW,GAAI,KA7Bb,CA8BJ,CAAA,EAAa,QAAQ,CAAG,CAAA,EA9BpB,EAAW,AAgCL,EAhCe,gBAAgB,CAAC,SAAS,CAAC,CAAA,GAEtD,AA8BY,EA9BF,gBAAgB,CAAC,MAAM,CAAC,GAClC,GA8BA,CAEiB,KAAb,GACF,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAW,IACb,EAAa,QAAQ,CAAG,CAAA,EA/C1B,AAiDY,EAjDF,gBAAgB,CAAC,MAAM,GACjC,KAmDiB,IAAb,GACF,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,CAGF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACpC,EAAa,KACf,EAAgB,QAAQ,CAAG,CAAA,EA7C7B,AAFc,EAAG,AAiDF,EAjDY,QAAQ,EAE9B,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAc,EAAI,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAE3C,EAAI,WAAW,CAAC,EAClB,GAEA,KA4CmB,KAAf,GACF,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACpC,EAAa,IACf,EAAgB,QAAQ,CAAG,CAAA,EA7C7B,AAFc,EAAG,AAiDF,EAjDY,QAAQ,EAE9B,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,MAAM,EAC7B,GAEA,KA8CmB,IAAf,GACF,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tbody = table.querySelector(\"tbody\");\nvar buttons = document.querySelectorAll(\".button\");\nvar appendRowBtn = buttons[0];\nvar removeRowBtn = buttons[1];\nvar appendColumnBtn = buttons[2];\nvar removeColumnBtn = buttons[3];\nvar rowCount = 4;\nvar cellsCount = 4;\nfunction removeRow(tableBody) {\n    tableBody.lastElementChild.remove();\n    rowCount--;\n}\nfunction appendRow(tableBody) {\n    var cloneRow = tableBody.lastElementChild.cloneNode(true);\n    tableBody.lastElementChild.before(cloneRow);\n    rowCount++;\n}\nfunction appendColumn(tableBody) {\n    var rows = _to_consumable_array(tableBody.children);\n    rows.forEach(function(row) {\n        var cloneColumn = row.cells[1].cloneNode(true);\n        row.appendChild(cloneColumn);\n    });\n    cellsCount++;\n}\nfunction removeColumn(tableBody) {\n    var rows = _to_consumable_array(tableBody.children);\n    rows.forEach(function(row) {\n        row.lastElementChild.remove();\n    });\n    cellsCount--;\n}\nappendRowBtn.addEventListener(\"click\", function() {\n    if (rowCount < 10) {\n        removeRowBtn.disabled = false;\n        appendRow(tbody);\n    }\n    if (rowCount === 10) appendRowBtn.disabled = true;\n});\nremoveRowBtn.addEventListener(\"click\", function() {\n    if (rowCount > 2) {\n        appendRowBtn.disabled = false;\n        removeRow(tbody);\n    }\n    if (rowCount === 2) removeRowBtn.disabled = true;\n});\nappendColumnBtn.addEventListener(\"click\", function() {\n    if (cellsCount < 10) {\n        removeColumnBtn.disabled = false;\n        appendColumn(tbody);\n    }\n    if (cellsCount === 10) appendColumnBtn.disabled = true;\n});\nremoveColumnBtn.addEventListener(\"click\", function() {\n    if (cellsCount > 2) {\n        appendColumnBtn.disabled = false;\n        removeColumn(tbody);\n    }\n    if (cellsCount === 2) removeColumnBtn.disabled = true;\n});\n\n//# sourceMappingURL=index.a21a471e.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\nconst buttons = document.querySelectorAll('.button');\nconst appendRowBtn = buttons[0];\nconst removeRowBtn = buttons[1];\nconst appendColumnBtn = buttons[2];\nconst removeColumnBtn = buttons[3];\n\nlet rowCount = 4;\nlet cellsCount = 4;\n\nfunction removeRow(tableBody) {\n  tableBody.lastElementChild.remove();\n  rowCount--;\n}\n\nfunction appendRow(tableBody) {\n  const cloneRow = tableBody.lastElementChild.cloneNode(true);\n\n  tableBody.lastElementChild.before(cloneRow);\n  rowCount++;\n}\n\nfunction appendColumn(tableBody) {\n  const rows = [...tableBody.children];\n\n  rows.forEach((row) => {\n    const cloneColumn = row.cells[1].cloneNode(true);\n\n    row.appendChild(cloneColumn);\n  });\n\n  cellsCount++;\n}\n\nfunction removeColumn(tableBody) {\n  const rows = [...tableBody.children];\n\n  rows.forEach((row) => {\n    row.lastElementChild.remove();\n  });\n\n  cellsCount--;\n}\n\nappendRowBtn.addEventListener('click', () => {\n  if (rowCount < 10) {\n    removeRowBtn.disabled = false;\n\n    appendRow(tbody);\n  }\n\n  if (rowCount === 10) {\n    appendRowBtn.disabled = true;\n  }\n});\n\nremoveRowBtn.addEventListener('click', () => {\n  if (rowCount > 2) {\n    appendRowBtn.disabled = false;\n\n    removeRow(tbody);\n  }\n\n  if (rowCount === 2) {\n    removeRowBtn.disabled = true;\n  }\n});\n\nappendColumnBtn.addEventListener('click', () => {\n  if (cellsCount < 10) {\n    removeColumnBtn.disabled = false;\n\n    appendColumn(tbody);\n  }\n\n  if (cellsCount === 10) {\n    appendColumnBtn.disabled = true;\n  }\n});\n\nremoveColumnBtn.addEventListener('click', () => {\n  if (cellsCount > 2) {\n    appendColumnBtn.disabled = false;\n\n    removeColumn(tbody);\n  }\n\n  if (cellsCount === 2) {\n    removeColumnBtn.disabled = true;\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tbody","table","document","querySelector","buttons","querySelectorAll","appendRowBtn","removeRowBtn","appendColumnBtn","removeColumnBtn","rowCount","cellsCount","addEventListener","cloneRow","disabled","tableBody","lastElementChild","cloneNode","before","remove","rows","children","forEach","row","cloneColumn","cells","appendChild"],"version":3,"file":"index.a21a471e.js.map"}